/*
 *theme: daily report
 *Date: 2016.07.04
 *Author: PJY
 */

Linux基本操作:

	1.	安装包
		sudo apt-get install [package name]

		删除包
		sudo apt-get remove [package name]

	2.	创建新文件夹
		mkdir [folderName]

		删除目录
		rmdir [folderName]

		切换目录
		cd [目的目录]

		显示当前目录
		pwd

		列出指定目录中所有子目录和文件
		ls [选项] [目录名]
		-----------------------------
		常用选项:
			-a   列出所有文件包括以.开头的隐含文件
			-A   不列出"."和".."
			-1   每列只显示一个文件或目录名称
			-c   以更改时间排序
			-u   以最后存取时间排序，显示文件和目录
			-l   详细格式列表
			-m   以","隔开目录或文件
			-r   反向排序
			-R   递归处理，将指定目录下的所有文件以及子目录一并处理

		拷贝文件from到to
		cp [from] [to]

		移动或更名现有文件或目录
		mv [选项] [源文件或目录] [目标文件或目录]
		----------------------------------------
			选项:
			-b   若需覆盖文件，则覆盖前先行备份。 
			-f   force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖；
			-i   若目标文件 (destination) 已经存在时，就会询问是否覆盖！
			-u   若目标文件已经存在，且 source 比较新，才会更新(update)
			-t   即指定mv的目标目录，该选项适用于移动多个源文件到一个目录的情况，此时目标目录在前，源文件在后。

		mv a.txt b.txt [将a.txt改名为b.txt]
		mv a.txt test  [将a.txt移动到test目录]
		mv -i log1.txt log2.txt [将文件file1改名为file2，如果file2已经存在，则询问是否覆盖]


		删除文件
		rm filename

		创建文件
		touch [filename]
		vi [filename]

		文件批量改名
		rename from to file

		rename .rm .rmvb * [把所有文件的后缀由rm改为rmvb]

		用文本编辑器打开文本
		gedit <filename>

		输出文档内容
		cat [-nbsv] [filename]
		-----------------------
			-n或--number   由1开始对所有输出的行数编号
			-b或--number-nonblank   和-n相似，只不过对于空白行不编号
			-s或--squeeze-blank   当遇到有连续两行以上的空白行，就代换为一行的空白行
			-v或--show-nonprinting

		辨识文件类型
		file [filename]

	3.	查找文件里符合条件的字符串【grep命令】
		grep [options] pattern files
		--------------------------------
		[options]主要参数：

			－c：只输出匹配行的计数。
			－I：不区分大 小写(只适用于单字符)。
			－h：查询多文件时不显示文件名。
			－l：查询多文件时只输出包含匹配字符的文件名。
			－n：显示匹配行及 行号。
			－s：不显示不存在或无匹配文本的错误信息。
			－v：显示不包含匹配文本的所有行。
		--------------------------------
		pattern正则表达式主要参数：

			\： 忽略正则表达式中特殊字符的原有含义。
			^：匹配正则表达式的开始行。
			$: 匹配正则表达式的结束行。
			\<：从匹配正则表达 式的行开始。
			\>：到匹配正则表达式的行结束。
			[ ]：单个字符，如[A]即A符合要求 。
			[ - ]：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。
			。：所有的单个字符。
			* ：有字符，长度可以为0。

		grep [options] "sort" *.doc 【文档中含有sort字符的行】

		
	4.	变更文件或目录权限
		chmod [-cfRv] [<权限范围>+/-/=<权限设置>][文件或目录]
		or
		chmod [-cfRv] [数字代号] [文件或目录]
		------------------------------------
		①	权限范围
			u:  User,文件或目录的拥有者
			g:  Group,文件或目录的所属群组
			o:  Other,除了文件或目录拥有者或所属群组之外，其他用户皆属于这个范围
			a:  All,全部的用户，包含拥有者，所属群组以及其他用户

		②	权限数字代号
			r:	读取权限，数字代号"4"
			w:	写入权限，数字代号"2"
			x:	执行或切换权限，数字代号"1"
			-:	没有任何权限，数字代号"0"

			so:
				若要 rwx 则 4+2+1=7  
				若要 rw- 则 4+2=6
				...
			777权限：
			chmod -R 777 filename

		③	-c或--changes 
			效果类似"-v",但仅回报更改的部分

			-f或--quiet或--silent
			不显示错误信息

			-R或--recursive
			递归处理，将指定目录下的所有文件及子目录一并处理

			-v或--verbose
			显示指令执行过程


	5.	vi操作

		对制定的文件进行编辑
		vi [filename]

		以只读的方式打开文件filename
		view [filename]

		进入输入模式：

			a  在当前游标之后输入
			i  在当前游标之前输入
			A  在当前行之末输入
			I  在当前行之首输入
			o  在当前行之下新增一行，并在新增行输入
			O  在当前行之上新增一行，并在新增行输入
			-------------------------
			输入结束后按esc退出输入模式

		退出:

			:wq!  强制保存并退出
			:wq   保存退出
			:x    作用和:wq一样
			ZZ    作用和:wq一样，不是是命令模式
			:q    退出
			:q!   强制退出

		游标移动：

			h  向左移动一个字元 
			l  向右移动一个字元
			j  向下移动一个字元
			k  向上移动一个字元
			:n   将光标定位到第n行
			:$   将光标定位到最后一行
			0   将光标定位到本行的行首
			$   将光标定位到本行的行尾
			G   将光标定位到本文章的最后一行，与:   $功能相同。
			H   将光标定位到屏幕的顶端
			M   将光标定位到屏幕的中间
			L   将光标定位到屏幕的底端

		搜索：

			/   后面跟要查找的东西，在文件中向前搜索
			?  后面跟要查找的东西，在文件中向后搜索
			n  向前重复搜索
			N  向后重复搜索

		复制粘贴：

			yy   复制当前行
			nyy  复制当前行到当前行一下的n-1行
			p    粘贴到当前行的下一行
			P    粘贴到当前行的上一行
			:1,100 co 200  将1~100的内容复制到第200行
			:1,102 co $    将1~102行的内容复制到最后一样

		删除剪切：

			dd   删除当前行
			ndd  与nyy相似
			dw   删除一个单词
			ndw  与ndd相似
			x    删除一个字符
			nx   删除n个字符
			dG   删除当前光标到文件末尾的所有内容
			d0   删除当前光标到本行行首的所有内容
			d$   删除当前光标到本行行尾的所有内容
			:1,100d   删除1~100行
			:100d     删除第100行
			:1,100 mo $ 将1~100行的内容移动到最后一行、

		替换：

			regexp:  是要匹配的式样
			replacement:  是要替换的字符串

			:s/regexp/replacement   替换当前行出现的第一个样式
			:s/regexp/replacement/g  替换当前行所有的匹配
			:%s/regexp/replacement/g  替换文件中所有匹配样式

		撤销：

			u    撤销上一次的更改
			Ctrl + R  还原被撤销的编辑操作

		重复上一个命令：

			.    用来重复上一个命令

	6.	查找文件或目录【find命令】

		①	使用name选项:
			find ~ -name "*.log" -print  [~代表根目录$home，.代表当前目录]

			find . -name "[A-Z]*" -print  [当前目录及子目录中以一个大写字母开头的文件]

			find /etc -name "host*" -print [在etc目录中查找以host开头的文件]

			find . -name "[a-z]*[4-9].log" -print [查找以一个小写字母开头，以4-9加上.log结束的文件]

		②	按照文件权限模式用-perm选项

			find . -perm 777(可写为-007) -print [查找文件权限为777的文件]

		③   忽略某个目录【-prune选项】

			find test -path "test/test3" -prune -o -print  [在test目录下查找文件，忽略test/test3]

		④	按照更改时间或访问时间等查找文件 【mtime,atime,ctime】

			find /var/adm -mtime +3 -print [查找目录下更改时间在3日以前的文件，-5则为5日以内]

		⑤	查找更新时间比文件a新但比文件b旧的文件
			find -newer a ! -newer b

			查找更改时间比a新的文件
			find . -newer a -print

		⑥	查找/etc下所有的目录
			find /etc -type d -print

			查找除目录以外的所有类型文件
			find /etc ! -type d -print

		⑦	查找文件长度大于1M的文件
			find . -size +1000000c -print

			查找文件大小恰好为100字节的文件
			find . -size 100c -print
















